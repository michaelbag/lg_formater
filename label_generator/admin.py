from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.http import HttpResponseRedirect
from django.contrib import messages
from django import forms
from .models import LabelGeneration, FieldMapping, GenerationLog


class FieldMappingInline(admin.TabularInline):
    """
    –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π
    """
    model = FieldMapping
    extra = 0
    fields = [
        'template_field', 'data_column_number', 'data_column_name',
        'is_required', 'default_value', 'format_string', 'order'
    ]
    readonly_fields = ['data_column_name']
    
    def get_queryset(self, request):
        """–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã"""
        return super().get_queryset(request).select_related('template_field')


class GenerationLogInline(admin.TabularInline):
    """
    –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ª–æ–≥–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    """
    model = GenerationLog
    extra = 0
    fields = ['level', 'message', 'row_number', 'timestamp']
    readonly_fields = ['timestamp']
    ordering = ['-timestamp']
    
    def has_add_permission(self, request, obj=None):
        """–ó–∞–ø—Ä–µ—â–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –≤—Ä—É—á–Ω—É—é"""
        return False


@admin.register(LabelGeneration)
class LabelGenerationAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —ç—Ç–∏–∫–µ—Ç–æ–∫
    """
    list_display = [
        'name',
        'data_source',
        'template',
        'status',
        'progress_display',
        'total_labels',
        'generated_labels',
        'created_by',
        'created_at',
        'output_file_link'
    ]
    list_filter = [
        'status',
        'created_at',
        'created_by',
        'template__template_type'
    ]
    search_fields = [
        'name',
        'description',
        'data_source__filename',
        'template__name',
        'created_by__username'
    ]
    readonly_fields = [
        'created_at',
        'started_at',
        'completed_at',
        'progress_percent',
        'total_labels',
        'generated_labels',
        'output_file_link',
        'log_file_link'
    ]
    inlines = [FieldMappingInline, GenerationLogInline]
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'description', 'created_by')
        }),
        ('–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö', {
            'fields': ('data_source', 'template')
        }),
        ('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏', {
            'fields': ('start_row', 'end_row', 'labels_per_page')
        }),
        ('–°—Ç–∞—Ç—É—Å –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å', {
            'fields': ('status', 'progress_percent', 'total_labels', 'generated_labels'),
            'classes': ('collapse',)
        }),
        ('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', {
            'fields': ('output_file', 'log_file', 'output_file_link', 'log_file_link'),
            'classes': ('collapse',)
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_at', 'started_at', 'completed_at', 'error_message'),
            'classes': ('collapse',)
        }),
    )
    
    def get_form(self, request, obj=None, **kwargs):
        """–î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ñ–æ—Ä–º—É"""
        form = super().get_form(request, obj, **kwargs)
        
        if obj and obj.pk:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
            form.base_fields['_actions'] = forms.CharField(
                widget=forms.HiddenInput(),
                required=False
            )
        
        return form
    
    def save_model(self, request, obj, form, change):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        if not change:  # –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
            obj.created_by = request.user
        super().save_model(request, obj, form, change)
    
    def response_change(self, request, obj):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π"""
        if "_start_generation" in request.POST:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                errors = obj.get_generation_errors()
                if errors:
                    for error in errors:
                        messages.error(request, error)
                else:
                    # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
                    filename = obj.start_generation()
                    messages.success(request, f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –§–∞–π–ª: {filename}")
            except Exception as e:
                messages.error(request, f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
            return HttpResponseRedirect(request.path)
        
        if "_cancel_generation" in request.POST:
            if obj.status == 'processing':
                obj.status = 'cancelled'
                obj.save()
                messages.success(request, "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            else:
                messages.warning(request, "–ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω—è—é—â—É—é—Å—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—é.")
            return HttpResponseRedirect(request.path)
        
        return super().response_change(request, obj)
    
    def progress_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π"""
        if obj.status == 'completed':
            color = 'green'
        elif obj.status == 'failed':
            color = 'red'
        elif obj.status == 'processing':
            color = 'blue'
        else:
            color = 'gray'
        
        return format_html(
            '<span style="color: {};">{}%</span>',
            color,
            obj.progress_percent
        )
    progress_display.short_description = '–ü—Ä–æ–≥—Ä–µ—Å—Å'
    
    def output_file_link(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Ñ–∞–π–ª"""
        if obj.output_file:
            return format_html(
                '<a href="{}" target="_blank">üìÑ –°–∫–∞—á–∞—Ç—å</a>',
                obj.output_file.url
            )
        return "–§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω"
    output_file_link.short_description = '–†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Ñ–∞–π–ª'
    
    def log_file_link(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –ª–æ–≥–∞"""
        if obj.log_file:
            return format_html(
                '<a href="{}" target="_blank">üìã –õ–æ–≥</a>',
                obj.log_file.url
            )
        return "–õ–æ–≥ –Ω–µ —Å–æ–∑–¥–∞–Ω"
    log_file_link.short_description = '–§–∞–π–ª –ª–æ–≥–∞'


@admin.register(FieldMapping)
class FieldMappingAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π
    """
    list_display = [
        'generation',
        'template_field',
        'data_column_number',
        'data_column_name',
        'is_required',
        'order'
    ]
    list_filter = [
        'is_required',
        'generation__status',
        'template_field__field_type'
    ]
    search_fields = [
        'generation__name',
        'template_field__field_name',
        'data_column_name'
    ]
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('generation', 'template_field', 'order')
        }),
        ('–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö', {
            'fields': ('data_column_number', 'data_column_name')
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('is_required', 'default_value', 'format_string')
        }),
    )


@admin.register(GenerationLog)
class GenerationLogAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ª–æ–≥–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    """
    list_display = [
        'generation',
        'level',
        'message_preview',
        'row_number',
        'timestamp'
    ]
    list_filter = [
        'level',
        'timestamp',
        'generation__status'
    ]
    search_fields = [
        'generation__name',
        'message'
    ]
    readonly_fields = ['timestamp']
    ordering = ['-timestamp']
    
    def message_preview(self, obj):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —Å–æ–æ–±—â–µ–Ω–∏—è"""
        return obj.message[:100] + '...' if len(obj.message) > 100 else obj.message
    message_preview.short_description = '–°–æ–æ–±—â–µ–Ω–∏–µ (–ø—Ä–µ–≤—å—é)'
    
    def has_add_permission(self, request, obj=None):
        """–ó–∞–ø—Ä–µ—â–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –≤—Ä—É—á–Ω—É—é"""
        return False
