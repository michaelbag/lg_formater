from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.http import HttpResponseRedirect
from django.contrib import messages
from .models import LabelTemplate, TemplateField, TemplateUsage


class TemplateFieldInline(admin.TabularInline):
    """
    –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ø–æ–ª–µ–π —à–∞–±–ª–æ–Ω–∞
    """
    model = TemplateField
    extra = 0
    fields = [
        'field_name', 'field_type', 'x_position', 'y_position', 
        'width', 'height', 'font_size', 'is_required'
    ]


@admin.register(LabelTemplate)
class LabelTemplateAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ —ç—Ç–∏–∫–µ—Ç–æ–∫
    """
    list_display = [
        'name', 
        'template_type_display', 
        'print_width_mm', 
        'print_height_mm', 
        'layout_width_mm',
        'layout_height_mm',
        'dpi',
        'is_active',
        'created_by',
        'created_at',
        'preview_link',
        'file_size_display'
    ]
    list_filter = [
        'template_type',
        'is_active',
        'created_at',
        'created_by',
        'template_file'
    ]
    search_fields = [
        'name',
        'description',
        'created_by__username'
    ]
    readonly_fields = [
        'created_at',
        'updated_at',
        'file_size_display',
        'file_extension'
    ]
    inlines = [TemplateFieldInline]
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'description', 'template_type', 'is_active')
        }),
        ('–§–∞–π–ª—ã', {
            'fields': ('template_file', 'preview_image', 'file_size_display', 'file_extension')
        }),
        ('–û–±–ª–∞—Å—Ç—å –ø–µ—á–∞—Ç–∏', {
            'fields': ('print_width_mm', 'print_height_mm')
        }),
        ('–û–±–ª–∞—Å—Ç—å –º–∞–∫–µ—Ç–∞ (–ø–æ–¥ –æ–±—Ä–µ–∑)', {
            'fields': ('layout_width_mm', 'layout_height_mm')
        }),
        ('–û—Ç—Å—Ç—É–ø—ã', {
            'fields': ('margin_top_mm', 'margin_bottom_mm', 'margin_left_mm', 'margin_right_mm'),
            'classes': ('collapse',)
        }),
        ('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—á–∞—Ç–∏', {
            'fields': ('dpi',)
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('created_by', 'created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )
    
    def save_model(self, request, obj, form, change):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        if not change:  # –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
            obj.created_by = request.user
        super().save_model(request, obj, form, change)
    
    def response_change(self, request, obj):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤"""
        if "_redetect_dimensions" in request.POST:
            if obj.is_blank_template:
                messages.warning(request, "–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —à–∞–±–ª–æ–Ω–∞ –±–µ–∑ —Ñ–∞–π–ª–∞.")
            else:
                try:
                    obj.auto_detect_dimensions()
                    obj.save()
                    messages.success(request, "–†–∞–∑–º–µ—Ä—ã —à–∞–±–ª–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã.")
                except Exception as e:
                    messages.error(request, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–æ–≤: {e}")
            return HttpResponseRedirect(request.path)
        return super().response_change(request, obj)
    
    def preview_link(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
        if obj.preview_image:
            return format_html(
                '<a href="{}" target="_blank">üëÅÔ∏è –ü—Ä–µ–≤—å—é</a>',
                obj.preview_image.url
            )
        return "–ù–µ—Ç –ø—Ä–µ–≤—å—é"
    preview_link.short_description = '–ü—Ä–µ–≤—å—é'
    
    def file_size_display(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
        if obj.is_blank_template:
            return "–ë–µ–∑ —Ñ–∞–π–ª–∞"
        
        size = obj.file_size
        if size == 0:
            return "0 –±–∞–π—Ç"
        
        for unit in ['–±–∞–π—Ç', '–ö–ë', '–ú–ë', '–ì–ë']:
            if size < 1024.0:
                return f"{size:.1f} {unit}"
            size /= 1024.0
        return f"{size:.1f} –¢–ë"
    file_size_display.short_description = '–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞'


@admin.register(TemplateField)
class TemplateFieldAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ø–æ–ª–µ–π —à–∞–±–ª–æ–Ω–æ–≤
    """
    list_display = [
        'template',
        'field_name',
        'field_type',
        'x_position',
        'y_position',
        'width',
        'height',
        'is_required'
    ]
    list_filter = [
        'field_type',
        'is_required',
        'template__template_type',
        'template'
    ]
    search_fields = [
        'field_name',
        'template__name',
        'description'
    ]
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('template', 'field_name', 'field_type', 'description')
        }),
        ('–ü–æ–∑–∏—Ü–∏—è –∏ —Ä–∞–∑–º–µ—Ä', {
            'fields': ('x_position', 'y_position', 'width', 'height')
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–∫—Å—Ç–∞', {
            'fields': ('font_size', 'font_family', 'is_bold', 'is_italic', 'alignment')
        }),
        ('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': ('default_value', 'is_required')
        }),
    )


@admin.register(TemplateUsage)
class TemplateUsageAdmin(admin.ModelAdmin):
    """
    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤
    """
    list_display = [
        'template',
        'data_source',
        'generated_count',
        'generated_by',
        'generated_at',
        'output_file_link'
    ]
    list_filter = [
        'generated_at',
        'template__template_type',
        'generated_by'
    ]
    search_fields = [
        'template__name',
        'data_source__filename',
        'generated_by__username'
    ]
    readonly_fields = ['generated_at']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('template', 'data_source', 'generated_count')
        }),
        ('–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏', {
            'fields': ('output_file', 'generated_by', 'generated_at')
        }),
    )
    
    def output_file_link(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Ñ–∞–π–ª"""
        if obj.output_file:
            return format_html(
                '<a href="{}" target="_blank">üìÑ –°–∫–∞—á–∞—Ç—å</a>',
                obj.output_file.url
            )
        return "–§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω"
    output_file_link.short_description = '–†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Ñ–∞–π–ª'
