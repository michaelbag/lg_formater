# Generated by Django 5.2.7 on 2025-10-16 13:08

import django.db.models.deletion
import label_templates.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('data_sources', '0003_csvuploadlog_original_file'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LabelTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Уникальное название шаблона этикетки', max_length=255, verbose_name='Название шаблона')),
                ('description', models.TextField(blank=True, help_text='Подробное описание назначения шаблона', null=True, verbose_name='Описание')),
                ('template_type', models.CharField(choices=[('pdf', 'PDF'), ('jpeg', 'JPEG'), ('png', 'PNG'), ('svg', 'SVG'), ('docx', 'Word Document')], help_text='Формат файла шаблона', max_length=10, verbose_name='Тип шаблона')),
                ('template_file', models.FileField(help_text='Файл шаблона этикетки', upload_to=label_templates.models.template_upload_path, verbose_name='Файл шаблона')),
                ('preview_image', models.ImageField(blank=True, help_text='Превью шаблона для отображения в интерфейсе', null=True, upload_to=label_templates.models.template_upload_path, verbose_name='Превью изображение')),
                ('width_mm', models.PositiveIntegerField(help_text='Ширина этикетки в миллиметрах', verbose_name='Ширина (мм)')),
                ('height_mm', models.PositiveIntegerField(help_text='Высота этикетки в миллиметрах', verbose_name='Высота (мм)')),
                ('dpi', models.PositiveIntegerField(default=300, help_text='Разрешение печати (точек на дюйм)', verbose_name='DPI')),
                ('is_active', models.BooleanField(default=True, help_text='Доступен ли шаблон для использования', verbose_name='Активный')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания шаблона', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата и время последнего обновления', verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(help_text='Пользователь, создавший шаблон', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Шаблон этикетки',
                'verbose_name_plural': 'Шаблоны этикеток',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'created_by')},
            },
        ),
        migrations.CreateModel(
            name='TemplateUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_count', models.PositiveIntegerField(default=0, help_text='Количество сгенерированных этикеток', verbose_name='Количество сгенерированных')),
                ('generated_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время генерации этикеток', verbose_name='Дата генерации')),
                ('output_file', models.FileField(blank=True, help_text='Сгенерированный файл с этикетками', null=True, upload_to='generated_labels/', verbose_name='Результирующий файл')),
                ('data_source', models.ForeignKey(help_text='CSV файл с данными для генерации', on_delete=django.db.models.deletion.CASCADE, to='data_sources.csvuploadlog', verbose_name='Источник данных')),
                ('generated_by', models.ForeignKey(help_text='Пользователь, сгенерировавший этикетки', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Сгенерировал')),
                ('template', models.ForeignKey(help_text='Использованный шаблон', on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='label_templates.labeltemplate', verbose_name='Шаблон')),
            ],
            options={
                'verbose_name': 'Использование шаблона',
                'verbose_name_plural': 'Использование шаблонов',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='TemplateField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(help_text='Уникальное название поля в шаблоне', max_length=100, verbose_name='Название поля')),
                ('field_type', models.CharField(choices=[('text', 'Текст'), ('number', 'Число'), ('date', 'Дата'), ('barcode', 'Штрих-код'), ('qr', 'QR-код'), ('image', 'Изображение')], default='text', help_text='Тип данных поля', max_length=20, verbose_name='Тип поля')),
                ('x_position', models.PositiveIntegerField(help_text='Горизонтальная позиция поля в миллиметрах', verbose_name='Позиция X (мм)')),
                ('y_position', models.PositiveIntegerField(help_text='Вертикальная позиция поля в миллиметрах', verbose_name='Позиция Y (мм)')),
                ('width', models.PositiveIntegerField(help_text='Ширина поля в миллиметрах', verbose_name='Ширина (мм)')),
                ('height', models.PositiveIntegerField(help_text='Высота поля в миллиметрах', verbose_name='Высота (мм)')),
                ('font_size', models.PositiveIntegerField(default=12, help_text='Размер шрифта для текстовых полей', verbose_name='Размер шрифта')),
                ('font_family', models.CharField(default='Arial', help_text='Название шрифта', max_length=100, verbose_name='Шрифт')),
                ('is_bold', models.BooleanField(default=False, help_text='Жирное начертание текста', verbose_name='Жирный')),
                ('is_italic', models.BooleanField(default=False, help_text='Курсивное начертание текста', verbose_name='Курсив')),
                ('alignment', models.CharField(choices=[('left', 'По левому краю'), ('center', 'По центру'), ('right', 'По правому краю')], default='left', help_text='Выравнивание текста в поле', max_length=10, verbose_name='Выравнивание')),
                ('default_value', models.CharField(blank=True, help_text='Значение поля по умолчанию', max_length=255, null=True, verbose_name='Значение по умолчанию')),
                ('is_required', models.BooleanField(default=False, help_text='Обязательно ли заполнение поля', verbose_name='Обязательное')),
                ('description', models.TextField(blank=True, help_text='Описание назначения поля', null=True, verbose_name='Описание поля')),
                ('template', models.ForeignKey(help_text='Шаблон, к которому относится поле', on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='label_templates.labeltemplate', verbose_name='Шаблон')),
            ],
            options={
                'verbose_name': 'Поле шаблона',
                'verbose_name_plural': 'Поля шаблонов',
                'ordering': ['template', 'y_position', 'x_position'],
                'unique_together': {('template', 'field_name')},
            },
        ),
    ]
